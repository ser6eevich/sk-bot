// Telegram Web App API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
class TelegramAuth {
	constructor() {
		this.user = null;
		this.isAuthorized = false;
		this.init();
	}

	init() {
		// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
		const savedUser = localStorage.getItem('telegramUser');
		if (savedUser) {
			this.user = JSON.parse(savedUser);
			this.isAuthorized = true;
			this.updateProfile();
			this.showAuthorizedContent();
			return;
		}

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ Telegram Web App
		if (window.Telegram && window.Telegram.WebApp) {
			this.webApp = window.Telegram.WebApp;
			this.webApp.ready();
			this.webApp.expand();

			// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
			this.user = this.webApp.initDataUnsafe?.user;
			this.isAuthorized = !!this.user;

			if (this.isAuthorized) {
				// –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
				localStorage.setItem('telegramUser', JSON.stringify(this.user));
				// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
				this.registerUser();
				this.updateProfile();
				this.showAuthorizedContent();
			} else {
				this.showAuthPrompt();
			}
		} else {
			// –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–Ω–µ Telegram
			this.showTestMode();
		}
	}

	updateProfile() {
		if (!this.user) return;

		// –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –ø—Ä–æ—Ñ–∏–ª–µ
		const profileElements = {
			avatar: document.getElementById('userAvatar'),
			name: document.getElementById('userName'),
			username: document.getElementById('userUsername'),
			id: document.getElementById('userId'),
		};

		// –ê–≤–∞—Ç–∞—Ä
		if (profileElements.avatar && this.user.photo_url) {
			profileElements.avatar.src = this.user.photo_url;
			profileElements.avatar.style.display = 'block';
		}

		// –ò–º—è
		if (profileElements.name) {
			profileElements.name.textContent =
				this.user.first_name +
				(this.user.last_name ? ' ' + this.user.last_name : '');
		}

		// Username
		if (profileElements.username) {
			profileElements.username.textContent = this.user.username
				? '@' + this.user.username
				: '–ù–µ —É–∫–∞–∑–∞–Ω';
		}

		// ID
		if (profileElements.id) {
			profileElements.id.textContent = 'ID: ' + this.user.id;
		}
	}

	showAuthorizedContent() {
		// –°–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
		const authPrompt = document.getElementById('authPrompt');
		if (authPrompt) {
			authPrompt.style.display = 'none';
		}

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
		const authorizedContent = document.getElementById('authorizedContent');
		if (authorizedContent) {
			authorizedContent.style.display = 'block';
		}

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
		this.showUserContent();

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
		this.showGreeting();

		// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
		this.updateUserStats();
	}

	showGreeting() {
		const userGreeting = document.getElementById('userGreeting');
		const userGreetingName = document.getElementById('userGreetingName');

		if (userGreeting && userGreetingName && this.user) {
			userGreetingName.textContent = this.user.first_name;
			userGreeting.style.display = 'block';
		}
	}

	showAuthPrompt() {
		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
		const authPrompt = document.getElementById('authPrompt');
		if (authPrompt) {
			authPrompt.style.display = 'block';
		}

		// –°–∫—Ä—ã–≤–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
		const authorizedContent = document.getElementById('authorizedContent');
		if (authorizedContent) {
			authorizedContent.style.display = 'none';
		}

		// –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
		this.hideUserContent();
	}

	showTestMode() {
		// –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–Ω–µ Telegram - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
		console.log('Telegram Web App –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω - –∑–∞–ø—É—Å–∫ –≤ –æ–±—ã—á–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ');
		
		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –Ω—É–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å –≤ Telegram
		const authPrompt = document.getElementById('authPrompt');
		if (authPrompt) {
			authPrompt.innerHTML = `
				<div class="card-body text-center">
					<div class="mb-4">
						<div class="display-6">üì±</div>
					</div>
					<h4 class="card-title mb-3">–û—Ç–∫—Ä–æ–π—Ç–µ –≤ Telegram</h4>
					<p class="text-muted mb-4">
						–≠—Ç–æ—Ç Mini App –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ Telegram. 
						–û—Ç–∫—Ä–æ–π—Ç–µ –±–æ—Ç–∞ –≤ Telegram –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º.
					</p>
					<div class="alert alert-info">
						<strong>–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</strong> –û—Ç–∫—Ä–æ–π—Ç–µ –±–æ—Ç–∞ –≤ Telegram –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ—Ñ–∏–ª—å"
					</div>
				</div>
			`;
			authPrompt.style.display = 'block';
		}

		// –°–∫—Ä—ã–≤–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
		const authorizedContent = document.getElementById('authorizedContent');
		if (authorizedContent) {
			authorizedContent.style.display = 'none';
		}

		// –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
		this.hideUserContent();
	}

	async updateUserStats() {
		if (!this.user) return;

		try {
			// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å —Å–µ—Ä–≤–µ—Ä–∞
			const response = await fetch('/api/telegram/stats', {
				headers: {
					'X-Telegram-Init-Data': this.webApp?.initData || ''
				}
			});

			if (response.ok) {
				const data = await response.json();
				const stats = data.stats;

				// –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏
				const analysesCount = document.getElementById('analysesCount');
				const reportsCount = document.getElementById('reportsCount');

				if (analysesCount) analysesCount.textContent = stats.analysesCount || 0;
				if (reportsCount) reportsCount.textContent = stats.reportsCount || 0;
			} else {
				console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', response.status);
				// –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
				this.showDefaultStats();
			}
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
			// –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
			this.showDefaultStats();
		}
	}

	showDefaultStats() {
		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ –∑–∞–≥—Ä—É–∑–∫–∏
		const analysesCount = document.getElementById('analysesCount');
		const reportsCount = document.getElementById('reportsCount');

		if (analysesCount) analysesCount.textContent = '0';
		if (reportsCount) reportsCount.textContent = '0';
	}

	async registerUser() {
		if (!this.user || !this.webApp) return;

		try {
			// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
			const response = await fetch('/api/telegram/user', {
				headers: {
					'X-Telegram-Init-Data': this.webApp.initData
				}
			});

			if (response.ok) {
				const data = await response.json();
				console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:', data.user);
			} else {
				console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', response.status);
			}
		} catch (error) {
			console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
		}
	}

	// –ú–µ—Ç–æ–¥ –¥–ª—è –≤—ã—Ö–æ–¥–∞ (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω)
	logout() {
		// –û—á–∏—â–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
		localStorage.removeItem('telegramUser');
		this.user = null;
		this.isAuthorized = false;

		// –°–∫—Ä—ã–≤–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
		const authorizedContent = document.getElementById('authorizedContent');
		if (authorizedContent) {
			authorizedContent.style.display = 'none';
		}

		// –°–∫—Ä—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –¥—Ä—É–≥–∏–µ —Ä–∞–∑–¥–µ–ª—ã
		this.hideUserContent();

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
		this.showAuthPrompt();

		// –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
		const userGreeting = document.getElementById('userGreeting');
		if (userGreeting) {
			userGreeting.style.display = 'none';
		}

		if (this.webApp) {
			this.webApp.close();
		} else {
			// –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
			location.reload();
		}
	}

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	getUser() {
		return this.user;
	}

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
	isUserAuthorized() {
		return this.isAuthorized;
	}

	// –°–∫—Ä—ã—Ç–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
	hideUserContent() {
		// –°–∫—Ä—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
		const statsCard = document.getElementById('statsCard');
		if (statsCard) {
			statsCard.style.display = 'none';
		}

		// –°–∫—Ä—ã–≤–∞–µ–º —Ä–∞–∑–¥–µ–ª—ã "–ú–æ–∏ –∞–Ω–∞–ª–∏–∑—ã" –∏ "–ú–æ–∏ –æ—Ç—á–µ—Ç—ã"
		const userAnalyses = document.getElementById('userAnalyses');
		const userReports = document.getElementById('userReports');
		if (userAnalyses) userAnalyses.style.display = 'none';
		if (userReports) userReports.style.display = 'none';
	}

	// –ü–æ–∫–∞–∑ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
	showUserContent() {
		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
		const statsCard = document.getElementById('statsCard');
		if (statsCard) {
			statsCard.style.display = 'block';
		}

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–¥–µ–ª—ã "–ú–æ–∏ –∞–Ω–∞–ª–∏–∑—ã" –∏ "–ú–æ–∏ –æ—Ç—á–µ—Ç—ã"
		const userAnalyses = document.getElementById('userAnalyses');
		const userReports = document.getElementById('userReports');
		if (userAnalyses) userAnalyses.style.display = 'block';
		if (userReports) userReports.style.display = 'block';
	}
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
	window.telegramAuth = new TelegramAuth();
});
