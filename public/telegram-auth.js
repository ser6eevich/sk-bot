// Telegram Web App API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
class TelegramAuth {
	constructor() {
		this.user = null;
		this.isAuthorized = false;
		this.init();
	}

	init() {
		// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
		const savedUser = localStorage.getItem('telegramUser');
		if (savedUser) {
			this.user = JSON.parse(savedUser);
			this.isAuthorized = true;
			this.updateProfile();
			this.showAuthorizedContent();
			return;
		}

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ Telegram Web App
		if (window.Telegram && window.Telegram.WebApp) {
			this.webApp = window.Telegram.WebApp;
			this.webApp.ready();
			this.webApp.expand();

			// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
			this.user = this.webApp.initDataUnsafe?.user;
			this.isAuthorized = !!this.user;

			if (this.isAuthorized) {
				// –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
				localStorage.setItem('telegramUser', JSON.stringify(this.user));
				// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
				this.registerUser();
				this.updateProfile();
				this.showAuthorizedContent();
			} else {
				this.showAuthPrompt();
			}
		} else {
			// –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–Ω–µ Telegram
			this.showTestMode();
		}
	}

	updateProfile() {
		if (!this.user) return;

		// –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –ø—Ä–æ—Ñ–∏–ª–µ
		const profileElements = {
			avatar: document.getElementById('userAvatar'),
			name: document.getElementById('userName'),
			username: document.getElementById('userUsername'),
			id: document.getElementById('userId'),
		};

		// –ê–≤–∞—Ç–∞—Ä
		if (profileElements.avatar && this.user.photo_url) {
			profileElements.avatar.src = this.user.photo_url;
			profileElements.avatar.style.display = 'block';
			// –°–∫—Ä—ã–≤–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –∞–≤–∞—Ç–∞—Ä
			const defaultAvatar = document.getElementById('defaultAvatar');
			if (defaultAvatar) {
				defaultAvatar.style.display = 'none';
			}
		}

		// –ò–º—è
		if (profileElements.name) {
			profileElements.name.textContent =
				this.user.first_name +
				(this.user.last_name ? ' ' + this.user.last_name : '');
		}

		// Username
		if (profileElements.username) {
			profileElements.username.textContent = this.user.username
				? '@' + this.user.username
				: '–ù–µ —É–∫–∞–∑–∞–Ω';
		}

		// ID
		if (profileElements.id) {
			profileElements.id.textContent = 'ID –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏: ' + this.user.id;
		}
	}

	showAuthorizedContent() {
		// –°–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
		const authPrompt = document.getElementById('authPrompt');
		if (authPrompt) {
			authPrompt.style.display = 'none';
		}

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
		const authorizedContent = document.getElementById('authorizedContent');
		if (authorizedContent) {
			authorizedContent.style.display = 'block';
		}

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
		this.showUserContent();

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
		this.showGreeting();

		// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
		this.updateUserStats();
	}

	showGreeting() {
		const userGreeting = document.getElementById('userGreeting');
		const userGreetingName = document.getElementById('userGreetingName');

		if (userGreeting && userGreetingName && this.user) {
			userGreetingName.textContent = this.user.first_name;
			userGreeting.style.display = 'block';
		}
	}

	showAuthPrompt() {
		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
		const authPrompt = document.getElementById('authPrompt');
		if (authPrompt) {
			authPrompt.style.display = 'block';
		}

		// –°–∫—Ä—ã–≤–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
		const authorizedContent = document.getElementById('authorizedContent');
		if (authorizedContent) {
			authorizedContent.style.display = 'none';
		}

		// –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
		this.hideUserContent();
	}

	showTestMode() {
		// –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–Ω–µ Telegram - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
		console.log('Telegram Web App –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω - –∑–∞–ø—É—Å–∫ –≤ –æ–±—ã—á–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ');
		
		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –Ω—É–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å –≤ Telegram
		const authPrompt = document.getElementById('authPrompt');
		if (authPrompt) {
			authPrompt.innerHTML = `
				<div class="card-body text-center">
					<div class="mb-4">
						<div class="display-6">üì±</div>
					</div>
					<h4 class="card-title mb-3">–û—Ç–∫—Ä–æ–π—Ç–µ –≤ Telegram</h4>
					<p class="text-muted mb-4">
						–≠—Ç–æ—Ç Mini App –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ Telegram. 
						–û—Ç–∫—Ä–æ–π—Ç–µ –±–æ—Ç–∞ –≤ Telegram –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º.
					</p>
					<div class="alert alert-info">
						<strong>–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</strong> –û—Ç–∫—Ä–æ–π—Ç–µ –±–æ—Ç–∞ –≤ Telegram –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ—Ñ–∏–ª—å"
					</div>
				</div>
			`;
			authPrompt.style.display = 'block';
		}

		// –°–∫—Ä—ã–≤–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
		const authorizedContent = document.getElementById('authorizedContent');
		if (authorizedContent) {
			authorizedContent.style.display = 'none';
		}

		// –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
		this.hideUserContent();
	}

	async updateUserStats() {
		if (!this.user) return;

		try {
			// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å —Å–µ—Ä–≤–µ—Ä–∞
			const response = await fetch('/api/telegram/stats', {
				headers: {
					'X-Telegram-Init-Data': this.webApp?.initData || ''
				}
			});

			if (response.ok) {
				const data = await response.json();
				const stats = data.stats;

				// –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –≤ –ø—Ä–æ—Ñ–∏–ª–µ
				const analysesCount = document.getElementById('analysesCount');
				const reportsCount = document.getElementById('reportsCount');

				if (analysesCount) analysesCount.textContent = stats.analysesCount || 0;
				if (reportsCount) reportsCount.textContent = stats.reportsCount || 0;

				// –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
				const homeAnalysesCount = document.getElementById('homeAnalysesCount');
				const homeReportsCount = document.getElementById('homeReportsCount');

				if (homeAnalysesCount) homeAnalysesCount.textContent = stats.analysesCount || 0;
				if (homeReportsCount) homeReportsCount.textContent = stats.reportsCount || 0;

				// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–∫–∏ –∞–Ω–∞–ª–∏–∑–æ–≤ –∏ –æ—Ç—á–µ—Ç–æ–≤
				await this.loadUserAnalyses();
				await this.loadUserReports();
			} else {
				console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', response.status);
				// –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
				this.showDefaultStats();
			}
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
			// –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
			this.showDefaultStats();
		}
	}

	showDefaultStats() {
		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ –∑–∞–≥—Ä—É–∑–∫–∏
		const analysesCount = document.getElementById('analysesCount');
		const reportsCount = document.getElementById('reportsCount');

		if (analysesCount) analysesCount.textContent = '0';
		if (reportsCount) reportsCount.textContent = '0';
	}

	async loadUserAnalyses() {
		try {
			const response = await fetch('/api/telegram/analyses', {
				headers: {
					'X-Telegram-Init-Data': this.webApp?.initData || ''
				}
			});

			if (response.ok) {
				const data = await response.json();
				this.displayAnalyses(data.analyses || []);
			}
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–Ω–∞–ª–∏–∑–æ–≤:', error);
		}
	}

	async loadUserReports() {
		try {
			const response = await fetch('/api/telegram/reports', {
				headers: {
					'X-Telegram-Init-Data': this.webApp?.initData || ''
				}
			});

			if (response.ok) {
				const data = await response.json();
				this.displayReports(data.reports || []);
			}
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–æ–≤:', error);
		}
	}

	displayAnalyses(analyses) {
		const analysesList = document.getElementById('analysesList');
		const analysesEmpty = document.getElementById('analysesEmpty');

		if (!analysesList || !analysesEmpty) return;

		if (analyses.length === 0) {
			analysesList.innerHTML = '';
			analysesEmpty.style.display = 'block';
			return;
		}

		analysesEmpty.style.display = 'none';
		analysesList.innerHTML = analyses.map(analysis => `
			<div class="card mb-3">
				<div class="card-body">
					<div class="d-flex align-items-start">
						<div class="me-3">
							<img src="icons/analysis.png" alt="–ê–Ω–∞–ª–∏–∑" class="profile-item-icon">
						</div>
						<div class="flex-grow-1">
							<div class="d-flex justify-content-between align-items-start">
								<div class="flex-grow-1">
									<h6 class="card-title mb-1">${analysis.productName || '–ê–Ω–∞–ª–∏–∑ —Ç–æ–≤–∞—Ä–∞'}</h6>
									<p class="card-text text-muted small mb-2">
										${new Date(analysis.createdAt).toLocaleDateString('ru-RU')}
									</p>
									<p class="card-text small">${analysis.summary || '–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω'}</p>
								</div>
								<button class="btn btn-sm btn-outline-primary" onclick="viewAnalysis(${analysis.id})">
									–ü—Ä–æ—Å–º–æ—Ç—Ä
								</button>
							</div>
						</div>
					</div>
				</div>
			</div>
		`).join('');
	}

	displayReports(reports) {
		const reportsList = document.getElementById('reportsList');
		const reportsEmpty = document.getElementById('reportsEmpty');
		const showAllBtn = document.getElementById('showAllReportsBtn');

		if (!reportsList || !reportsEmpty) return;

		if (reports.length === 0) {
			reportsList.innerHTML = '';
			reportsEmpty.style.display = 'block';
			if (showAllBtn) showAllBtn.classList.add('d-none');
			return;
		}

		reportsEmpty.style.display = 'none';
		
		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ" –µ—Å–ª–∏ –æ—Ç—á–µ—Ç–æ–≤ –±–æ–ª—å—à–µ 4
		if (showAllBtn) {
			if (reports.length > 4) {
				showAllBtn.classList.remove('d-none');
			} else {
				showAllBtn.classList.add('d-none');
			}
		}

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 –æ—Ç—á–µ—Ç–∞
		const recentReports = reports.slice(0, 4);
		
		reportsList.innerHTML = recentReports.map(report => `
			<div class="card mb-3">
				<div class="card-body">
					<div class="d-flex align-items-start">
						<div class="me-3">
							<img src="icons/financial-report.png" alt="–û—Ç—á–µ—Ç" class="profile-item-icon">
						</div>
						<div class="flex-grow-1">
							<div class="d-flex justify-content-between align-items-start">
								<div class="flex-grow-1">
									<h6 class="card-title mb-1">${report.title || '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç'}</h6>
									<p class="card-text text-muted small mb-2">
										${new Date(report.createdAt).toLocaleDateString('ru-RU')}
									</p>
									<p class="card-text small">–û–±—â–∞—è —Å—É–º–º–∞: ${report.totalAmount || '0'} ‚ÇΩ</p>
								</div>
								<div class="d-flex gap-2">
									<button class="btn btn-sm btn-primary" onclick="sendReportToTelegram(${report.id})">
										üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å
									</button>
									<button class="btn btn-sm btn-outline-success" onclick="viewReport(${report.id})">
										üëÅ –ü—Ä–æ—Å–º–æ—Ç—Ä
									</button>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		`).join('');

		// –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –æ—Ç—á–µ—Ç—ã –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
		this.loadAllReports(reports);
	}

	loadAllReports(allReports) {
		const allReportsList = document.getElementById('allReportsList');
		if (!allReportsList) return;

		allReportsList.innerHTML = allReports.map(report => `
			<div class="card mb-3">
				<div class="card-body">
					<div class="d-flex align-items-start">
						<div class="me-3">
							<img src="icons/financial-report.png" alt="–û—Ç—á–µ—Ç" class="profile-item-icon">
						</div>
						<div class="flex-grow-1">
							<div class="d-flex justify-content-between align-items-start">
								<div class="flex-grow-1">
									<h6 class="card-title mb-1">${report.title || '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç'}</h6>
									<p class="card-text text-muted small mb-2">
										${new Date(report.createdAt).toLocaleDateString('ru-RU')}
									</p>
									<p class="card-text small">–û–±—â–∞—è —Å—É–º–º–∞: ${report.totalAmount || '0'} ‚ÇΩ</p>
								</div>
								<div class="d-flex gap-2">
									<button class="btn btn-sm btn-primary" onclick="sendReportToTelegram(${report.id})">
										üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å
									</button>
									<button class="btn btn-sm btn-outline-success" onclick="viewReport(${report.id})">
										üëÅ –ü—Ä–æ—Å–º–æ—Ç—Ä
									</button>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		`).join('');
	}

	async registerUser() {
		if (!this.user || !this.webApp) return;

		try {
			// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
			const response = await fetch('/api/telegram/user', {
				headers: {
					'X-Telegram-Init-Data': this.webApp.initData
				}
			});

			if (response.ok) {
				const data = await response.json();
				console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:', data.user);
			} else {
				console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', response.status);
			}
		} catch (error) {
			console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
		}
	}

	// –ú–µ—Ç–æ–¥ –¥–ª—è –≤—ã—Ö–æ–¥–∞ (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω)
	logout() {
		// –û—á–∏—â–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
		localStorage.removeItem('telegramUser');
		this.user = null;
		this.isAuthorized = false;

		// –°–∫—Ä—ã–≤–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
		const authorizedContent = document.getElementById('authorizedContent');
		if (authorizedContent) {
			authorizedContent.style.display = 'none';
		}

		// –°–∫—Ä—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –¥—Ä—É–≥–∏–µ —Ä–∞–∑–¥–µ–ª—ã
		this.hideUserContent();

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
		this.showAuthPrompt();

		// –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
		const userGreeting = document.getElementById('userGreeting');
		if (userGreeting) {
			userGreeting.style.display = 'none';
		}

		if (this.webApp) {
			this.webApp.close();
		} else {
			// –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
			location.reload();
		}
	}

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	getUser() {
		return this.user;
	}

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
	isUserAuthorized() {
		return this.isAuthorized;
	}

	// –°–∫—Ä—ã—Ç–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
	hideUserContent() {
		// –°–∫—Ä—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
		const statsCard = document.getElementById('statsCard');
		if (statsCard) {
			statsCard.style.display = 'none';
		}

		// –°–∫—Ä—ã–≤–∞–µ–º —Ä–∞–∑–¥–µ–ª—ã "–ú–æ–∏ –∞–Ω–∞–ª–∏–∑—ã" –∏ "–ú–æ–∏ –æ—Ç—á–µ—Ç—ã"
		const userAnalyses = document.getElementById('userAnalyses');
		const userReports = document.getElementById('userReports');
		if (userAnalyses) userAnalyses.style.display = 'none';
		if (userReports) userReports.style.display = 'none';
	}

	// –ü–æ–∫–∞–∑ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
	showUserContent() {
		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
		const statsCard = document.getElementById('statsCard');
		if (statsCard) {
			statsCard.style.display = 'block';
		}

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–¥–µ–ª—ã "–ú–æ–∏ –∞–Ω–∞–ª–∏–∑—ã" –∏ "–ú–æ–∏ –æ—Ç—á–µ—Ç—ã"
		const userAnalyses = document.getElementById('userAnalyses');
		const userReports = document.getElementById('userReports');
		if (userAnalyses) userAnalyses.style.display = 'block';
		if (userReports) userReports.style.display = 'block';
	}
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–∑–æ–≤–∞ –∏–∑ HTML
function viewAnalysis(analysisId) {
	console.log('–ü—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∞–ª–∏–∑–∞:', analysisId);
	// –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–Ω–∞–ª–∏–∑–∞
}

function viewReport(reportId) {
	console.log('–ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á–µ—Ç–∞:', reportId);
	// –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç—á–µ—Ç–∞
}

async function sendReportToTelegram(reportId) {
	try {
		const response = await fetch(`/api/telegram/send-report/${reportId}`, {
			method: 'POST',
			headers: {
				'X-Telegram-Init-Data': window.Telegram?.WebApp?.initData || ''
			}
		});

		if (response.ok) {
			alert('‚úÖ –û—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram!');
		} else {
			const error = await response.json();
			alert('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: ' + (error.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
		}
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞:', error);
		alert('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞');
	}
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
	window.telegramAuth = new TelegramAuth();
});
