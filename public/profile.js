// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let currentUser = null;
let currentAnalyses = [];
let currentReports = [];

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function () {
	initializeProfile();
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª—è
async function initializeProfile() {
	try {
		// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
		if (window.telegramAuth && window.telegramAuth.isAuthorized()) {
			const userData = window.telegramAuth.getUserData();
			await loadUserProfile(userData);
		} else {
			showAuthPrompt();
		}
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è:', error);
		showAuthPrompt();
	}
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–æ—Ä–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
function showAuthPrompt() {
	document.getElementById('authPrompt').style.display = 'block';
	document.getElementById('authorizedContent').style.display = 'none';
	document.getElementById('statsCard').style.display = 'none';
	document.getElementById('userAnalyses').style.display = 'none';
	document.getElementById('userReports').style.display = 'none';
}

// –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function loadUserProfile(userData) {
	try {
		// –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
		const response = await fetch('/api/profile/user', {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json',
			},
			body: JSON.stringify({
				telegramId: userData.id,
				username: userData.username,
				firstName: userData.first_name,
				lastName: userData.last_name,
				avatarUrl: userData.photo_url,
			}),
		});

		if (!response.ok) {
			throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
		}

		const result = await response.json();
		currentUser = result.user;

		// –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
		updateUserInterface();

		// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –¥–∞–Ω–Ω—ã–µ
		await loadUserStats();
		await loadUserAnalyses();
		await loadUserReports();

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
		document.getElementById('authPrompt').style.display = 'none';
		document.getElementById('authorizedContent').style.display = 'block';
		document.getElementById('statsCard').style.display = 'block';
		document.getElementById('userAnalyses').style.display = 'block';
		document.getElementById('userReports').style.display = 'block';
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è:', error);
		showAuthPrompt();
	}
}

// –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function updateUserInterface() {
	if (!currentUser) return;

	// –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
	document.getElementById('userName').textContent =
		currentUser.firstName || currentUser.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
	document.getElementById('userUsername').textContent = currentUser.username
		? `@${currentUser.username}`
		: '';
	document.getElementById(
		'userId'
	).textContent = `ID: ${currentUser.telegramId}`;

	// –û–±–Ω–æ–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä
	if (currentUser.avatarUrl) {
		const avatarImg = document.getElementById('userAvatar');
		avatarImg.src = currentUser.avatarUrl;
		avatarImg.style.display = 'block';
		document.getElementById('defaultAvatar').style.display = 'none';
	}
}

// –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function loadUserStats() {
	try {
		const response = await fetch(
			`/api/profile/user/${currentUser.telegramId}/stats`
		);
		if (!response.ok) {
			throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
		}

		const result = await response.json();
		document.getElementById('analysesCount').textContent =
			result.stats.analysesCount;
		document.getElementById('reportsCount').textContent =
			result.stats.reportsCount;
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
	}
}

// –ó–∞–≥—Ä—É–∑–∏—Ç—å –∞–Ω–∞–ª–∏–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function loadUserAnalyses() {
	try {
		const response = await fetch(
			`/api/profile/user/${currentUser.telegramId}/analyses?limit=5`
		);
		if (!response.ok) {
			throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–Ω–∞–ª–∏–∑–æ–≤');
		}

		const result = await response.json();
		currentAnalyses = result.analyses;
		displayAnalyses(result.analyses);
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–Ω–∞–ª–∏–∑–æ–≤:', error);
	}
}

// –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∞–Ω–∞–ª–∏–∑—ã
function displayAnalyses(analyses) {
	const analysesList = document.getElementById('analysesList');
	const analysesEmpty = document.getElementById('analysesEmpty');

	if (analyses.length === 0) {
		analysesList.style.display = 'none';
		analysesEmpty.style.display = 'block';
		return;
	}

	analysesList.style.display = 'block';
	analysesEmpty.style.display = 'none';

	analysesList.innerHTML = analyses
		.map(
			analysis => `
		<div class="card mb-3">
			<div class="card-body">
				<div class="d-flex justify-content-between align-items-start">
					<div class="flex-grow-1">
						<h6 class="card-title mb-1">${analysis.title}</h6>
						<p class="card-text text-muted small mb-2">${analysis.category}</p>
						<div class="d-flex gap-3 small text-muted">
							<span>üí∞ ${analysis.recommendedPrice} ‚ÇΩ</span>
							<span>‚≠ê ${analysis.avgRating || 'N/A'}</span>
							<span>üìä ${analysis.competition}/10</span>
						</div>
					</div>
					<button 
						class="btn btn-sm btn-outline-primary"
						onclick="showAnalysis(${analysis.id})"
					>
						–ü—Ä–æ—Å–º–æ—Ç—Ä
					</button>
				</div>
			</div>
		</div>
	`
		)
		.join('');
}

// –ó–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function loadUserReports() {
	try {
		const response = await fetch(
			`/api/profile/user/${currentUser.telegramId}/reports?limit=5`
		);
		if (!response.ok) {
			throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Ç—á–µ—Ç–æ–≤');
		}

		const result = await response.json();
		currentReports = result.reports;
		displayReports(result.reports);
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Ç—á–µ—Ç–æ–≤:', error);
	}
}

// –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –æ—Ç—á–µ—Ç—ã
function displayReports(reports) {
	const reportsList = document.getElementById('reportsList');
	const reportsEmpty = document.getElementById('reportsEmpty');

	if (reports.length === 0) {
		reportsList.style.display = 'none';
		reportsEmpty.style.display = 'block';
		return;
	}

	reportsList.style.display = 'block';
	reportsEmpty.style.display = 'none';

	reportsList.innerHTML = reports
		.map(
			report => `
		<div class="card mb-3">
			<div class="card-body">
				<div class="d-flex justify-content-between align-items-start">
					<div class="flex-grow-1">
						<h6 class="card-title mb-1">${report.title}</h6>
						<p class="card-text text-muted small mb-2">${report.fileName}</p>
						<div class="d-flex gap-3 small text-muted">
							<span>üìÅ ${formatFileSize(report.fileSize)}</span>
							<span>üìÖ ${formatDate(report.createdAt)}</span>
						</div>
					</div>
					<button 
						class="btn btn-sm btn-outline-primary"
						onclick="showReport(${report.id})"
					>
						–ü—Ä–æ—Å–º–æ—Ç—Ä
					</button>
				</div>
			</div>
		</div>
	`
		)
		.join('');
}

// –ü–æ–∫–∞–∑–∞—Ç—å –∞–Ω–∞–ª–∏–∑ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
async function showAnalysis(analysisId) {
	try {
		const response = await fetch(`/api/profile/analysis/${analysisId}`);
		if (!response.ok) {
			throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–Ω–∞–ª–∏–∑–∞');
		}

		const result = await response.json();
		const analysis = result.analysis;

		// –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
		document.getElementById('analysisModalLabel').textContent = analysis.title;

		// –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
		document.getElementById('analysisContent').innerHTML = `
			<div class="row">
				<div class="col-md-6">
					<h6>–û–ø–∏—Å–∞–Ω–∏–µ</h6>
					<p>${analysis.description}</p>
					
					<h6>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</h6>
					<p><span class="badge bg-primary">${analysis.category}</span></p>
					
					<h6>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h6>
					<p>${analysis.recommendations}</p>
				</div>
				<div class="col-md-6">
					<h6>–¶–µ–Ω–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h6>
					<div class="mb-3">
						<strong>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Ü–µ–Ω–∞:</strong> ${analysis.recommendedPrice} ‚ÇΩ
					</div>
					<div class="mb-3">
						<strong>–î–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω:</strong> ${analysis.priceRange.min} - ${
			analysis.priceRange.max
		} ‚ÇΩ
					</div>
					
					<h6>–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏–∏</h6>
					<div class="mb-3">
						<strong>–£—Ä–æ–≤–µ–Ω—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏–∏:</strong> ${analysis.competition}/10
						<div class="progress mt-1">
							<div class="progress-bar" style="width: ${analysis.competition * 10}%"></div>
						</div>
					</div>
					
					${
						analysis.avgRating
							? `
						<h6>–°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥</h6>
						<div class="mb-3">
							<strong>–†–µ–π—Ç–∏–Ω–≥:</strong> ${analysis.avgRating}/5
							<div class="progress mt-1">
								<div class="progress-bar bg-warning" style="width: ${
									analysis.avgRating * 20
								}%"></div>
							</div>
						</div>
					`
							: ''
					}
					
					<h6>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</h6>
					<p class="text-muted">${formatDate(analysis.createdAt)}</p>
				</div>
			</div>
		`;

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
		const modal = new bootstrap.Modal(document.getElementById('analysisModal'));
		modal.show();
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–Ω–∞–ª–∏–∑–∞:', error);
		alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–Ω–∞–ª–∏–∑–∞');
	}
}

// –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á–µ—Ç –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
async function showReport(reportId) {
	try {
		const response = await fetch(`/api/profile/report/${reportId}`);
		if (!response.ok) {
			throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Ç—á–µ—Ç–∞');
		}

		const result = await response.json();
		const report = result.report;

		// –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
		document.getElementById('reportModalLabel').textContent = report.title;

		// –ü–∞—Ä—Å–∏–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
		let processedData;
		try {
			processedData = JSON.parse(report.processedData);
		} catch (e) {
			processedData = { error: '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç–∞' };
		}

		// –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
		document.getElementById('reportContent').innerHTML = `
			<div class="row mb-3">
				<div class="col-md-6">
					<h6>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ</h6>
					<p><strong>–ò–º—è —Ñ–∞–π–ª–∞:</strong> ${report.fileName}</p>
					<p><strong>–†–∞–∑–º–µ—Ä:</strong> ${formatFileSize(report.fileSize)}</p>
					<p><strong>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</strong> ${formatDate(report.createdAt)}</p>
				</div>
				<div class="col-md-6">
					${
						report.summary
							? `
						<h6>–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</h6>
						<p>${report.summary}</p>
					`
							: ''
					}
				</div>
			</div>
			
			<div class="table-responsive">
				<h6>–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h6>
				${generateReportTable(processedData)}
			</div>
		`;

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
		const modal = new bootstrap.Modal(document.getElementById('reportModal'));
		modal.show();
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Ç—á–µ—Ç–∞:', error);
		alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Ç—á–µ—Ç–∞');
	}
}

// –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –æ—Ç—á–µ—Ç–∞
function generateReportTable(data) {
	if (data.error) {
		return `<p class="text-danger">${data.error}</p>`;
	}

	if (Array.isArray(data) && data.length > 0) {
		const headers = Object.keys(data[0]);
		return `
			<table class="table table-striped table-sm">
				<thead>
					<tr>
						${headers.map(header => `<th>${header}</th>`).join('')}
					</tr>
				</thead>
				<tbody>
					${data
						.slice(0, 100)
						.map(
							row => `
						<tr>
							${headers.map(header => `<td>${row[header] || ''}</td>`).join('')}
						</tr>
					`
						)
						.join('')}
				</tbody>
			</table>
			${
				data.length > 100
					? `<p class="text-muted">–ü–æ–∫–∞–∑–∞–Ω–æ –ø–µ—Ä–≤—ã—Ö 100 –∑–∞–ø–∏—Å–µ–π –∏–∑ ${data.length}</p>`
					: ''
			}
		`;
	}

	return '<p class="text-muted">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</p>';
}

// –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∞–Ω–∞–ª–∏–∑—ã
function showAllAnalyses() {
	// –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ –≤—Å–µ–º–∏ –∞–Ω–∞–ª–∏–∑–∞–º–∏
	alert('–§—É–Ω–∫—Ü–∏—è "–í—Å–µ –∞–Ω–∞–ª–∏–∑—ã" –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö');
}

// –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –æ—Ç—á–µ—Ç—ã
function showAllReports() {
	// –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ –≤—Å–µ–º–∏ –æ—Ç—á–µ—Ç–∞–º–∏
	alert('–§—É–Ω–∫—Ü–∏—è "–í—Å–µ –æ—Ç—á–µ—Ç—ã" –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö');
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function formatFileSize(bytes) {
	if (bytes === 0) return '0 Bytes';
	const k = 1024;
	const sizes = ['Bytes', 'KB', 'MB', 'GB'];
	const i = Math.floor(Math.log(bytes) / Math.log(k));
	return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
}

function formatDate(dateString) {
	const date = new Date(dateString);
	return date.toLocaleDateString('ru-RU', {
		year: 'numeric',
		month: 'long',
		day: 'numeric',
		hour: '2-digit',
		minute: '2-digit',
	});
}
